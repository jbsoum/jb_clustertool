apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
    name: authelia
    namespace: authelia
spec:
    interval: 15m
    chart:
        spec:
            chart: authelia
            version: 24.1.4
            sourceRef:
                kind: HelmRepository
                name: truecharts
                namespace: flux-system
    releaseName: authelia
    values:
        TZ: ${TIMEZONE}
        domain: ${DOMAIN_0}
        default_redirection_url: https://${DOMAIN_AUTHELIA}
        # Need to keep encryption keys consistent for migrations (use old key here)
        storage:
            encryption_key: ${AUTHELIA_STORAGE_ENCRYPTION_KEY}
        authentication_backend:
            file:
                enabled: false
            ldap:
                enabled: true
                implementation: custom
                url: ldap://lldap-ldap.lldap.svc.cluster.local:3890
                base_dn: dc=${DC_SUBDOMAIN},dc=${DC_DOMAIN}
                username_attribute: uid
                additional_users_dn: ou=people
                users_filter: (&(|({username_attribute}={input})({mail_attribute}={input}))(objectClass=person))
                additional_groups_dn: ou=groups
                groups_filter: (member={dn})
                group_name_attribute: cn
                mail_attribute: mail
                display_name_attribute: displayName
                user: CN=${AUTHELIA_LLDAP_GROUP_NAME},ou=people,DC=${DC_SUBDOMAIN},DC=${DC_DOMAIN}
                plain_password: ${AUTHELIA_LLDAP_PASSWORD}
        notifier:
            disable_startup_check: true
            filesystem:
                enabled: false
            smtp:
                enabled: true
                disable_html_emails: false
                disable_require_tls: true
                enabledSecret: false
                host: ${IP_PROTONMAIL}
                identifier: 127.0.0.1
                port: ${PROTONMAIL_PORT_SMTP}
                startup_check_address: ${PROTONMAIL_USER}
                subject: '[Authelia] {title}'
                timeout: 5s
                tls:
                    minimum_version: TLS1.2
                    server_name: ""
                    skip_verify: true
                username: ${PROTONMAIL_USER}
                plain_password: ${PROTONMAIL_PASSWORD}
                sender: ${PROTONMAIL_USER}
        access_control:
            default_policy: deny
            rules:
                # - domain:
                #     - "*.${DOMAIN_0}"
                #   domain_regex: []
                #   networks: []
                #   policy: bypass
                #   resources:
                #     - ^/api([/?].*)?$
                #     - ' ^/identity.*$'
                #     - ^/triggers.*$
                #     - ^/meshagents.*$
                #     - ^/meshsettings.*$
                #     - ^/agent.*$
                #     - ^/control.*$
                #     - ^/meshrelay.*$
                #     - ^/wl.*$
                #     - ^/emby*
                #   subject: []
                # - domain:
                #     - ${DOMAIN_VAULTWARDEN}
                #   domain_regex: []
                #   networks: []
                #   policy: one_factor
                #   resources:
                #     - ^*/admin.*$
                #   subject: []
                # - domain:
                #     - ${DOMAIN_VAULTWARDEN}
                #   domain_regex: []
                #   networks: []
                #   policy: bypass
                #   resources: []
                #   subject: []
                # - domain:
                #     - ${DOMAIN_WHOOGLE}
                #     - ${DOMAIN_LIBREDDIT}
                #     - ${DOMAIN_VPN}
                #     - ${DOMAIN_INVIDIOUS}
                #     - ${DOMAIN_EMBY}
                #   domain_regex: []
                #   networks: []
                #   policy: bypass
                #   resources: []
                #   subject: []
                # - domain:
                #     - ${DOMAIN_OMBI}
                #     - ${DOMAIN_LLDAP}
                #     - ${DOMAIN_EMULATOR_JS}
                #     - ${DOMAIN_GITEA}
                #     - ${DOMAIN_VOCECHAT_SERVER}
                #     - ${DOMAIN_JELLYSEERR}
                #     - ${DOMAIN_0}
                #   domain_regex: []
                #   networks: []
                #   policy: one_factor
                #   resources: []
                #   subject:
                #     - "group:${LLDAP_USER_GROUP}"
                #     - "group:${LLDAP_ADMIN_GROUP}"
                - domain:
                    - "*.${DOMAIN_0}"
                    - ${DOMAIN_0}
                  domain_regex: []
                  networks: []
                  policy: one_factor
                  resources: []
                  subject:
                    - "group:${LLDAP_ADMIN_GROUP}"
        # cnpg:
        #     main:
        #         backups:
        #             credentials: ${S3_NAME}
        #             enabled: true
        #             revision: "${CNPG_BACKUP_REVISION}"
        #         mode: recovery
        #         recovery:
        #             method: object_store
        #             credentials: ${S3_NAME}
        #             enabled: true
        #             revision: "${CNPG_BACKUP_REVISION}"
                    # password: ${CNPG_PASSWORD_AUTHELIA}
                    # revision: "${CNPG_RECOVERY_REVISION}"
        credentials:
            backblaze:
                accessKey: ${S3_ACCESS_KEY}
                bucket: ${S3_BUCKET}
                encrKey: ${S3_ENCRYPTION_KEY}
                name: ${S3_NAME}
                path: ""
                secretKey: ${S3_SECRET_KEY}
                type: s3
                url: ${S3_URL}
        ingress:
            main:
                enabled: true
                integrations:
                    homepage:
                        enabled: true
                        group: Admin - Cluster
                    certManager:
                        enabled: false
                        certificateIssuer: ""
                    traefik:
                        enabled: true
                        # entrypoints:
                        #     - websecure
                        middlewares:
                            - name: ${TRAEFIK_MIDDLEWARE}
                              namespace: traefik
                hosts:
                    - host: ${DOMAIN_AUTHELIA}
                      paths:
                        - path: /
                          pathType: Prefix
                tls:
                    - certificateIssuer: ""
                      clusterCertificate: ${DNS_CLUSTER_CERT_NAME}
                      hosts:
                        - ${DOMAIN_AUTHELIA}
                      secretName: ""
        password_policy:
            enabled: false
            standard:
                enabled: false
                max_length: 0
                min_length: 8
                require_lowercase: false
                require_number: false
                require_special: false
                require_uppercase: false
        # persistence:
        #     config:
        #         volsync:
        #             - credentials: ${S3_NAME}
        #               dest:
        #                 enabled: true
        #               name: config
        #               src:
        #                 enabled: true
        #               type: restic
        regulation:
            ban_time: 5m
            find_time: 2m
            max_retries: 3
        session:
            expiration: 1h
            inactivity: 5m
            name: authelia_session
            remember_me_duration: 5M
            same_site: lax
        theme: dark
        totp:
            issuer: ""
            period: 30
            skew: 1
        
        # # added to try and change encryption key at pod start
        # workload:
        #     main:
        #         podSpec:
        #             containers:
        #                 main:
        #                     command: []
        #                     args: []
        #                         # - authelia storage --config=/configuration.yaml --postgres.password ${CNPG_PASSWORD_AUTHELIA}
        #                         # - authelia --config=/configuration.yaml