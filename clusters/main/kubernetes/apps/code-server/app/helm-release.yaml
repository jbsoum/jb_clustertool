apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease

metadata:
  name: code-server
  namespace: code-server

spec:
  interval: 15m
  chart:
    spec:
      chart: code-server
      version: 14.5.0
      sourceRef:
        kind: HelmRepository
        name: truecharts
        namespace: flux-system
  #timeout: 20m
  maxHistory: 3
  driftDetection:
    mode: warn
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false

  values:
    global:
      stopAll: false

    TZ: ${TIMEZONE}

    credentials:
      backblaze:
        accessKey: ${S3_ACCESS_KEY}
        bucket: ${S3_BUCKET}
        encrKey: ${S3_ENCRYPTION_KEY}
        name: ${S3_NAME}
        path: ""
        secretKey: ${S3_SECRET_KEY}
        type: s3
        url: ${S3_URL}

    ingress:
      main:
        enabled: true
        ingressClassName: external
        integrations:
          homepage:
            enabled: true
            group: Utilities
            name: Code Server - jbsoum
            widget:
              enabled: false
          certManager:
            enabled: true
            certificateIssuer: ${DNS_NAME}
          nginx:
            enabled: true
            auth:
              type: "authelia"
              internalHost: "authelia.authelia.svc.cluster.local:9091"
              externalHost: "${SUBDOMAIN_AUTHELIA}.${DOMAIN_0}"
              # Can be left default in most cases
              responseHeaders: []
        hosts:
          - host: ${SUBDOMAIN_CODE_SERVER}.${DOMAIN_0}

    persistence:
      config:
        volsync:
          - name: config
            type: restic
            credentials: ${S3_NAME}
            # restore
            dest:
              enabled: true
            # backup
            src:
              enabled: true
              trigger:
                schedule: 40 0 * * *
      secrets:
        enabled: true
        type: secret
        objectName: code-server-ssh-keys
        expandObjectName: false
        mountPath: /root/.ssh
        readOnly: false

      # ssh-config:
      #   enabled: true
      #   type: nfs
      #   server: ${IP_TRUENAS}
      #   path: "${NFS_CODE_SERVER_CONFIG}"
      #   mountPath: "/root/.ssh"
      #   autoPermissions:
      #     enabled: true
      code:
        enabled: true
        type: nfs
        server: ${IP_TRUENAS}
        path: "${NFS_CODE_SERVER_CODE}"
        mountPath: "/code"

    # securityContext:
    #   pod:
    #     fsGroup: 0
    #     supplementalGroups:
    #       - 568

    # workload:
    #   main:
    #     enabled: true
    #     primary: true
    #     podSpec:
    #       containers:
    #         main:
    #           enabled: true
    #           primary: true
    #           # mount keys to ssh directory, but don't overwrite ssh directory
    #           command:
    #             - /bin/sh
    #             - -c
    #             - mkdir /root/.ssh
    #             - cp /ssh-keys/* /root/.ssh/
